{
  "version": 3,
  "sources": ["../../../../../node_modules/@calpoly/mustang/src/auth.ts", "../../../../../node_modules/jwt-decode/build/esm/index.js", "../../../../../node_modules/@calpoly/mustang/src/context.ts", "../../../../../node_modules/@calpoly/mustang/src/message.ts", "../../../../../node_modules/@calpoly/mustang/src/service.ts", "../../../../../node_modules/@calpoly/mustang/src/update.ts", "../../../../../node_modules/@calpoly/mustang/src/html.ts", "../../../../../node_modules/@calpoly/mustang/src/components/drop-down.ts", "../../../../../node_modules/@calpoly/mustang/src/define.ts", "../../../../../node_modules/@calpoly/mustang/src/event.ts", "../../../../../node_modules/@calpoly/mustang/src/observer.ts", "../../../../../node_modules/@calpoly/mustang/src/rest.ts", "../../../../../node_modules/@calpoly/mustang/src/store.ts", "../../../../../node_modules/@calpoly/mustang/src/view.ts"],
  "sourcesContent": ["import { jwtDecode } from \"jwt-decode\";\nimport { Context, Provider } from \"./context\";\nimport { dispatcher } from \"./message\";\nimport { Service } from \"./service\";\nimport { ApplyMap, replace } from \"./update\";\n\nconst TOKEN_KEY = \"mu:auth:jwt\";\n\ninterface AuthModel {\n  user?: APIUser;\n  token?: string;\n}\n\ninterface AuthSuccessful {\n  token: string;\n  redirect?: string;\n}\n\ntype AuthMsg =\n  | [\"auth/signin\", AuthSuccessful]\n  | [\"auth/signout\"]\n  | [\"auth/redirect\"];\n\nclass AuthService extends Service<AuthMsg, AuthModel> {\n  static EVENT_TYPE = \"auth:message\";\n\n  _redirectForLogin: string | undefined;\n\n  constructor(\n    context: Context<AuthModel>,\n    redirectForLogin: string | undefined\n  ) {\n    super(\n      (m, a) => this.update(m, a),\n      context,\n      AuthService.EVENT_TYPE\n    );\n    this._redirectForLogin = redirectForLogin;\n  }\n\n  update(message: AuthMsg, apply: ApplyMap<AuthModel>) {\n    switch (message[0]) {\n      case \"auth/signin\":\n        const { token, redirect } =\n          message[1] as AuthSuccessful;\n        apply(signIn(token));\n        return redirection(redirect);\n      case \"auth/signout\":\n        apply(signOut());\n        return redirection(this._redirectForLogin);\n      case \"auth/redirect\":\n        apply(signOut());\n        return redirection(this._redirectForLogin, {\n          next: window.location.href\n        });\n      default:\n        const unhandled: never = message[0];\n        throw new Error(\n          `Unhandled Auth message \"${unhandled}\"`\n        );\n    }\n  }\n\n  static dispatch = dispatcher(AuthService.EVENT_TYPE);\n}\n\nfunction redirection(\n  redirect: string | undefined,\n  query: { [key: string]: string } = {}\n) {\n  if (!redirect) return undefined;\n\n  const base = window.location.href;\n  const target = new URL(redirect, base);\n\n  Object.entries(query).forEach(([k, v]) =>\n    target.searchParams.set(k, v)\n  );\n\n  return () => {\n    console.log(\"Redirecting to \", redirect);\n    window.location.assign(target);\n  };\n}\n\nclass AuthProvider extends Provider<AuthModel> {\n  get redirect() {\n    return this.getAttribute(\"redirect\") || undefined;\n  }\n\n  constructor() {\n    super({\n      user: AuthenticatedUser.authenticateFromLocalStorage()\n    });\n  }\n\n  connectedCallback() {\n    const service = new AuthService(\n      this.context,\n      this.redirect\n    );\n    service.attach(this);\n  }\n}\n\nclass APIUser {\n  authenticated = false;\n  username = \"anonymous\";\n\n  static deauthenticate(user: APIUser) {\n    user.authenticated = false;\n    user.username = \"anonymous\";\n    localStorage.removeItem(TOKEN_KEY);\n    return user;\n  }\n}\n\ninterface PayloadModel {\n  username: string;\n}\n\nclass AuthenticatedUser extends APIUser {\n  token: string | undefined;\n\n  constructor(token: string) {\n    super();\n    const jsonPayload = jwtDecode(token) as PayloadModel;\n    console.log(\"Token payload\", jsonPayload);\n    this.token = token;\n    this.authenticated = true;\n    this.username = jsonPayload.username;\n  }\n\n  static authenticate(token: string) {\n    const authenticatedUser = new AuthenticatedUser(token);\n    localStorage.setItem(TOKEN_KEY, token);\n    return authenticatedUser;\n  }\n\n  static authenticateFromLocalStorage() {\n    const priorToken = localStorage.getItem(TOKEN_KEY);\n\n    return priorToken\n      ? AuthenticatedUser.authenticate(priorToken)\n      : new APIUser();\n  }\n}\n\nfunction signIn(token: string) {\n  return replace<AuthModel>({\n    user: AuthenticatedUser.authenticate(token),\n    token\n  });\n}\n\nfunction signOut() {\n  return (model: AuthModel) => {\n    const oldUser = model.user;\n\n    return {\n      user:\n        oldUser && oldUser.authenticated\n          ? APIUser.deauthenticate(oldUser)\n          : oldUser,\n      token: \"\"\n    };\n  };\n}\n\nfunction authHeaders(user: APIUser): {\n  Authorization?: string;\n} {\n  if (user.authenticated) {\n    const authUser = user as AuthenticatedUser;\n    return {\n      Authorization: `Bearer ${authUser.token || \"NO_TOKEN\"}`\n    };\n  } else {\n    return {};\n  }\n}\n\nexport {\n  AuthenticatedUser,\n  AuthProvider as Provider,\n  APIUser as User,\n  authHeaders as headers,\n  type AuthSuccessful,\n  type AuthModel as Model,\n  type AuthMsg as Msg,\n  type AuthService as Service\n};\n", "export class InvalidTokenError extends Error {\n}\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\n        if (code.length < 2) {\n            code = \"0\" + code;\n        }\n        return \"%\" + code;\n    }));\n}\nfunction base64UrlDecode(str) {\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw new Error(\"base64 string is not of the correct length\");\n    }\n    try {\n        return b64DecodeUnicode(output);\n    }\n    catch (err) {\n        return atob(output);\n    }\n}\nexport function jwtDecode(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\n    }\n    options || (options = {});\n    const pos = options.header === true ? 0 : 1;\n    const part = token.split(\".\")[pos];\n    if (typeof part !== \"string\") {\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\n    }\n    let decoded;\n    try {\n        decoded = base64UrlDecode(part);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\n    }\n    try {\n        return JSON.parse(decoded);\n    }\n    catch (e) {\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\n    }\n}\n", "const EVENT_PREFIX = \"mu:context\";\nconst CONTEXT_CHANGE_EVENT = `${EVENT_PREFIX}:change`;\n\nexport class Context<T extends object> {\n  _proxy: T;\n\n  constructor(init: T, host: Provider<T>) {\n    this._proxy = createContext<T>(init, host);\n  }\n\n  get value() {\n    return this._proxy;\n  }\n\n  set value(next: T) {\n    Object.assign(this._proxy, next);\n  }\n\n  apply(mapFn: (t: T) => T) {\n    this.value = mapFn(this.value);\n  }\n}\n\nexport class Provider<T extends object> extends HTMLElement {\n  readonly context: Context<T>;\n\n  constructor(init: T) {\n    super();\n    console.log(\"Constructing context provider\", this);\n    this.context = new Context<T>(init, this);\n    this.style.display = \"contents\";\n  }\n\n  attach(observer: EventListener) {\n    this.addEventListener(CONTEXT_CHANGE_EVENT, observer);\n    return observer;\n  }\n\n  detach(observer: EventListener) {\n    this.removeEventListener(CONTEXT_CHANGE_EVENT, observer);\n  }\n}\n\nexport function createContext<T extends object>(\n  root: T,\n  eventTarget: Provider<T>\n): T {\n  let proxy = new Proxy<T>(root, {\n    get: (target, prop: string, receiver) => {\n      if (prop === \"then\") {\n        return undefined;\n      }\n      const value = Reflect.get(target, prop, receiver);\n      console.log(\n        `Context['${prop}'] => ${JSON.stringify(value)}`\n      );\n      return value;\n    },\n    set: (target, prop: string, newValue, receiver) => {\n      const oldValue = root[prop as keyof T];\n      console.log(\n        `Context['${prop.toString()}'] <= ${JSON.stringify(\n          newValue\n        )}; was ${JSON.stringify(oldValue)}`\n      );\n      const didSet = Reflect.set(\n        target,\n        prop,\n        newValue,\n        receiver\n      );\n      if (didSet) {\n        let evt = new CustomEvent(CONTEXT_CHANGE_EVENT, {\n          bubbles: true,\n          cancelable: true,\n          composed: true\n        });\n        Object.assign(evt, {\n          property: prop,\n          oldValue,\n          value: newValue\n        });\n        eventTarget.dispatchEvent(evt);\n      } else {\n        console.log(\n          `Context['${prop}] was not set to ${newValue}`\n        );\n      }\n      return didSet;\n    }\n  });\n\n  return proxy;\n}\n\nexport function whenProviderReady<T extends object>(\n  consumer: Element,\n  contextLabel: string\n) {\n  const provider = closestProvider(\n    contextLabel,\n    consumer\n  ) as Provider<T>;\n\n  return new Promise<Provider<T>>((resolve, reject) => {\n    if (provider) {\n      const name = provider.localName;\n      customElements\n        .whenDefined(name)\n        .then(() => resolve(provider));\n    } else {\n      reject({\n        context: contextLabel,\n        reason: `No provider for this context \"${contextLabel}:`\n      });\n    }\n  });\n}\n\nfunction closestProvider(\n  contextLabel: string,\n  el: Element\n): Element | undefined {\n  const selector = `[provides=\"${contextLabel}\"]`;\n\n  if (!el || el === document.getRootNode()) return undefined;\n\n  const closest = el.closest(selector);\n\n  if (closest) return closest;\n\n  const root = el.getRootNode();\n\n  if (root instanceof ShadowRoot)\n    return closestProvider(contextLabel, root.host);\n\n  return undefined;\n}\n", "export type Type<\n  msg extends string,\n  T extends object | undefined\n> = [msg, T] | [msg];\n\nexport type Base = Type<string, object | undefined>;\n\nexport class Dispatch<\n  Msg extends Base\n> extends CustomEvent<Msg> {\n  constructor(msg: Msg, eventType: string = \"mu:message\") {\n    super(eventType, {\n      bubbles: true,\n      composed: true,\n      detail: msg\n    });\n  }\n}\n\nexport function dispatcher<Msg extends Base>(\n  eventType: string\n) {\n  return (target: HTMLElement, ...msg: Msg) =>\n    target.dispatchEvent(new Dispatch<Msg>(msg, eventType));\n}\n", "import { Context, Provider } from \"./context\";\nimport { Base, Dispatch } from \"./message\";\nimport { MapFn, Update } from \"./update\";\n\nexport class Service<Msg extends Base, T extends object> {\n  _context: Context<T>;\n  _update: Update<Msg, T>;\n  _eventType: string;\n  _running = false;\n  _pending: Array<Msg> = [];\n\n  attach(host: Provider<T>) {\n    host.addEventListener(this._eventType, (ev: Event) => {\n      ev.stopPropagation();\n      const message = (ev as Dispatch<Msg>).detail;\n      this.consume(message);\n    });\n  }\n\n  start() {\n    if (!this._running) {\n      console.log(`Starting ${this._eventType} service`);\n      this._running = true;\n      this._pending.forEach((msg) => this.process(msg));\n    }\n  }\n\n  constructor(\n    update: Update<Msg, T>,\n    context: Context<T>,\n    eventType = \"service:message\"\n  ) {\n    this._context = context;\n    this._update = update;\n    this._eventType = eventType;\n  }\n\n  apply(fn: MapFn<T>) {\n    this._context.apply(fn);\n  }\n\n  consume(message: Msg) {\n    if (this._running) {\n      this.process(message);\n    } else {\n      console.log(\n        `Queueing ${this._eventType} message`,\n        message\n      );\n      this._pending.push(message);\n    }\n  }\n\n  process(message: Msg) {\n    console.log(\n      `Processing ${this._eventType} message`,\n      message\n    );\n    const command = this._update(\n      message,\n      this.apply.bind(this)\n    );\n    if (command) command(this._context.value);\n  }\n}\n", "import * as Message from \"./message\";\n\ntype Command<M> = (model: M) => void;\ntype MapFn<M> = (model: M) => M;\ntype ApplyMap<M> = (fn: MapFn<M>) => void;\n\ntype Update<Msg extends Message.Base, M extends object> = (\n  message: Msg,\n  apply: ApplyMap<M>\n) => Command<M> | void;\n\nfunction identity<M>(model: M): M {\n  return model;\n}\n\nfunction replace<M>(replacements: Partial<M>): MapFn<M> {\n  return (model: M) => ({ ...model, ...replacements });\n}\n\nexport {\n  identity,\n  replace,\n  type ApplyMap,\n  type Command,\n  type MapFn,\n  type Update\n};\n", "const parser = new DOMParser();\n\nexport function html(\n  template: TemplateStringsArray,\n  ...params: string[]\n): DocumentFragment {\n  const htmlString = template\n    .map((s, i) => (i ? [params[i - 1], s] : [s]))\n    .flat()\n    .join(\"\");\n  const doc = parser.parseFromString(htmlString, \"text/html\");\n  const collection = doc.head.childElementCount\n    ? doc.head.children\n    : doc.body.children;\n  const fragment = new DocumentFragment();\n\n  fragment.replaceChildren(...collection);\n\n  return fragment;\n}\n\nexport function shadow(fragment: DocumentFragment) {\n  const first = fragment.firstElementChild;\n  const template =\n    first && first.tagName === \"TEMPLATE\"\n      ? (first as HTMLTemplateElement)\n      : undefined;\n\n  return { attach };\n\n  function attach(\n    el: HTMLElement,\n    options: ShadowRootInit = { mode: \"open\" }\n  ) {\n    const shadow = el.attachShadow(options);\n\n    if (template)\n      shadow.appendChild(template.content.cloneNode(true));\n\n    return shadow;\n  }\n}\n", "import { html, shadow } from \"../html\";\n\nexport class DropdownElement extends HTMLElement {\n  static template = html`<template>\n    <slot name=\"actuator\"><button> Menu </button></slot>\n    <div id=\"panel\">\n      <slot></slot>\n    </div>\n\n    <style>\n      :host {\n        position: relative;\n      }\n      #is-shown {\n        display: none;\n      }\n      #panel {\n        display: none;\n\n        position: absolute;\n        right: 0;\n        margin-top: var(--size-spacing-small);\n        width: max-content;\n        padding: var(--size-spacing-small);\n        border-radius: var(--size-radius-small);\n        background: var(--color-background-card);\n        color: var(--color-text);\n        box-shadow: var(--shadow-popover);\n      }\n      :host([open]) #panel {\n        display: block;\n      }\n    </style>\n  </template>`;\n\n  constructor() {\n    super();\n\n    shadow(DropdownElement.template).attach(this);\n\n    if (this.shadowRoot) {\n      const actuator = this.shadowRoot.querySelector(\n        \"slot[name='actuator']\"\n      );\n      if (actuator)\n        actuator.addEventListener(\"click\", () => this.toggle());\n    }\n  }\n\n  toggle() {\n    if (this.hasAttribute(\"open\")) this.removeAttribute(\"open\");\n    else this.setAttribute(\"open\", \"open\");\n  }\n}\n", "type ElementDefinitions = {\n  [tag: string]: CustomElementConstructor;\n};\n\nexport function define(defns: ElementDefinitions) {\n  Object.entries(defns).map(([k, v]) => {\n    if (!customElements.get(k)) customElements.define(k, v);\n  });\n  return customElements;\n}\n", "export function relay(\n  event: Event,\n  customType: string,\n  detail: any\n) {\n  const relay = event.currentTarget as EventTarget;\n  const customEvent = new CustomEvent(customType, {\n    bubbles: true,\n    composed: true,\n    detail\n  });\n\n  console.log(\n    `Relaying event from ${event.type}:`,\n    customEvent\n  );\n\n  relay.dispatchEvent(customEvent);\n  event.stopPropagation();\n}\n", "import { Provider, whenProviderReady } from \"./context\";\n\nexport class Observer<T extends object> {\n  _target: HTMLElement;\n  _contextLabel: string;\n  _provider?: Provider<T>;\n  _effects: Effect<T>[] = [];\n\n  constructor(target: HTMLElement, contextLabel: string) {\n    this._target = target;\n    this._contextLabel = contextLabel;\n  }\n\n  observe(fn: EffectFn<T> | undefined = undefined) {\n    return new Promise<Effect<T>>((resolve, _) => {\n      if (this._provider) {\n        const effect = new Effect<T>(this._provider, fn);\n        this._effects.push(effect);\n        resolve(effect);\n      } else {\n        whenProviderReady<T>(this._target, this._contextLabel)\n          .then((provider: Provider<T>) => {\n            const effect = new Effect<T>(provider, fn);\n            this._provider = provider;\n            this._effects.push(effect);\n            provider.attach((ev: Event) =>\n              this._handleChange(ev as CustomEvent)\n            );\n            resolve(effect);\n          })\n          .catch((err) =>\n            console.log(\n              `Observer ${this._contextLabel} failed to locate a provider`,\n              err\n            )\n          );\n      }\n    });\n  }\n\n  _handleChange(ev: CustomEvent) {\n    console.log(\n      \"Received change event for observers\",\n      ev,\n      this._effects\n    );\n    this._effects.forEach((obs) => obs.runEffect());\n  }\n}\n\nexport type EffectFn<T extends object> = (value: T) => void;\n\nexport class Effect<T extends object> {\n  _provider: Provider<T>;\n  _effectFn?: EffectFn<T>;\n\n  constructor(observable: Provider<T>, fn?: EffectFn<T>) {\n    this._provider = observable;\n    if (fn) this.setEffect(fn);\n  }\n\n  get context() {\n    return this._provider.context;\n  }\n\n  get value() {\n    return this.context.value;\n  }\n\n  setEffect(fn: EffectFn<T>) {\n    this._effectFn = fn;\n    this.runEffect();\n  }\n\n  runEffect() {\n    if (this._effectFn) {\n      this._effectFn(this.context.value);\n    }\n  }\n}\n", "import * as Auth from \"./auth\";\nimport { html, shadow } from \"./html\";\nimport { Observer } from \"./observer\";\n\nexport class FormElement extends HTMLElement {\n  static observedAttributes = [\"src\", \"new\"];\n\n  get src() {\n    return this.getAttribute(\"src\");\n  }\n\n  get isNew() {\n    return this.hasAttribute(\"new\");\n  }\n\n  static template = html`\n    <template>\n      <form autocomplete=\"off\">\n        <slot></slot>\n        <slot><button type=\"submit\">Submit</button></slot>\n      </form>\n      <slot name=\"delete\"></slot>\n      <style>\n        form {\n          display: grid;\n          gap: var(--size-spacing-medium);\n          grid-template-columns: [start] 1fr [label] 1fr [input] 3fr 1fr [end];\n        }\n        ::slotted(label) {\n          display: grid;\n          grid-column: label / end;\n          grid-template-columns: subgrid;\n          gap: var(--size-spacing-medium);\n        }\n        button[type=\"submit\"] {\n          grid-column: input;\n          justify-self: start;\n        }\n      </style>\n    </template>\n  `;\n\n  get form() {\n    return this.shadowRoot?.querySelector(\"form\");\n  }\n\n  _state: { [key: string]: any } = {};\n  _user: Auth.User = new Auth.User();\n\n  constructor() {\n    super();\n    shadow(FormElement.template).attach(this);\n\n    if (this.form) {\n      this.form.addEventListener(\"submit\", (event) => {\n        event.preventDefault();\n        if (this.src) {\n          console.log(\"Submitting form\", this._state);\n          const method = this.isNew ? \"POST\" : \"PUT\";\n          const action = this.isNew ? \"created\" : \"updated\";\n          const src = this.isNew\n            ? this.src.replace(/[/][$]new$/, \"\")\n            : this.src;\n\n          submitForm(\n            src,\n            this._state,\n            method,\n            this.authorization\n          )\n            .then((json) => populateForm(json, this))\n            .then((json) => {\n              const customType = `mu-rest-form:${action}`;\n              const event = new CustomEvent(customType, {\n                bubbles: true,\n                composed: true,\n                detail: {\n                  method,\n                  [action]: json,\n                  url: src\n                }\n              });\n              this.dispatchEvent(event);\n            });\n        }\n      });\n    }\n\n    this.addEventListener(\"change\", (event) => {\n      const target = event.target as HTMLInputElement;\n      if (target) {\n        const name = target.name as string;\n        const value = target.value;\n\n        if (name) this._state[name] = value;\n      }\n    });\n  }\n\n  _authObserver = new Observer<Auth.Model>(\n    this,\n    \"blazing:auth\"\n  );\n\n  get authorization() {\n    if (this._user?.authenticated) {\n      const user = this._user as Auth.AuthenticatedUser;\n      return { Authorization: `Bearer ${user.token}` };\n    } else {\n      return {};\n    }\n  }\n\n  connectedCallback() {\n    this._authObserver.observe(({ user }) => {\n      if (user) {\n        this._user = user;\n        if (this.src) {\n          fetchData(this.src, this.authorization).then(\n            (json) => {\n              this._state = json;\n              populateForm(json, this);\n            }\n          );\n        }\n      }\n    });\n  }\n\n  attributeChangedCallback(\n    name: string,\n    oldValue: string,\n    newValue: string\n  ) {\n    switch (name) {\n      case \"src\":\n        if (\n          this.src &&\n          newValue &&\n          newValue !== oldValue &&\n          !this.isNew\n        ) {\n          fetchData(this.src, this.authorization).then(\n            (json) => {\n              this._state = json;\n              populateForm(json, this);\n            }\n          );\n        }\n        break;\n      case \"new\":\n        if (newValue) {\n          this._state = {};\n          populateForm({}, this);\n        }\n        break;\n    }\n  }\n}\n\nexport function fetchData(src: string, authorization: {}) {\n  return fetch(src, { headers: authorization })\n    .then((response) => {\n      if (response.status !== 200) {\n        throw `Status: ${response.status}`;\n      }\n      return response.json();\n    })\n    .catch((error) =>\n      console.log(`Failed to load form from ${src}:`, error)\n    );\n}\n\nfunction populateForm(json: object, formBody: HTMLElement) {\n  const entries = Object.entries(json);\n\n  for (const [key, val] of entries) {\n    const el = formBody.querySelector(`[name=\"${key}\"]`);\n\n    // console.log(`Populating ${key}`, input);\n    if (el) {\n      const input = el as HTMLInputElement;\n      switch (input.type) {\n        case \"checkbox\":\n          const checkbox = input as { checked: boolean };\n          checkbox.checked = Boolean(val);\n          break;\n        default:\n          input.value = val;\n          break;\n      }\n    }\n  }\n\n  return json;\n}\n\nfunction submitForm(\n  src: string,\n  json: object,\n  method = \"PUT\",\n  authorization = {}\n) {\n  return fetch(src, {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      ...authorization\n    },\n    body: JSON.stringify(json)\n  })\n    .then((res) => {\n      if (res.status != 200 && res.status != 201)\n        throw `Form submission failed: Status ${res.status}`;\n      return res.json();\n    })\n    .catch((err) => console.log(\"Error submitting form:\", err));\n}\n", "import * as Auth from \"./auth\";\nimport { Context, Provider } from \"./context\";\nimport * as Message from \"./message\";\nimport { Observer } from \"./observer\";\nimport { Service } from \"./service\";\nimport { ApplyMap, Command, Update } from \"./update\";\n\nclass StoreService<\n  Msg extends Message.Base,\n  M extends object\n> extends Service<Msg, M> {\n  static EVENT_TYPE = \"mu:message\";\n\n  constructor(context: Context<M>, updateFn: Update<Msg, M>) {\n    super(updateFn, context, StoreService.EVENT_TYPE);\n  }\n}\n\ntype AuthorizedUpdate<\n  Msg extends Message.Base,\n  M extends object\n> = (\n  message: Msg,\n  apply: ApplyMap<M>,\n  user: Auth.User\n) => Command<M> | void;\n\nclass StoreProvider<\n  M extends object,\n  Msg extends Message.Base\n> extends Provider<M> {\n  _updateFn: AuthorizedUpdate<Msg, M>;\n  _authObserver: Observer<Auth.Model>;\n  _user = new Auth.User();\n\n  constructor(\n    update: AuthorizedUpdate<Msg, M>,\n    init: M,\n    authContext: string\n  ) {\n    super(init);\n    this._updateFn = update;\n    this._authObserver = new Observer<Auth.Model>(\n      this,\n      authContext\n    );\n  }\n\n  connectedCallback() {\n    const service = new StoreService<Msg, M>(\n      this.context,\n      (msg: Msg, apply: ApplyMap<M>) =>\n        this._updateFn(msg, apply, this._user)\n    );\n    service.attach(this);\n    this._authObserver.observe(({ user }) => {\n      console.log(\"Store got auth\", user);\n      if (user) this._user = user;\n      service.start();\n    });\n  }\n}\n\nexport { StoreProvider as Provider, StoreService as Service };\n", "import { LitElement } from \"lit\";\nimport { property } from \"lit/decorators.js\";\nimport { Context } from \"./context\";\nimport * as Message from \"./message\";\nimport { Observer } from \"./observer\";\n\nexport class View<\n  M extends object,\n  Msg extends Message.Base\n> extends LitElement {\n  _observer?: Observer<M>;\n  _context?: Context<M>;\n  _lastModel?: M;\n\n  @property()\n  get model() {\n    this._lastModel = this._context\n      ? this._context.value\n      : ({} as M);\n    return this._lastModel;\n  }\n\n  constructor(context: string) {\n    super();\n    this._observer = new Observer<M>(this, context);\n  }\n\n  override connectedCallback() {\n    super.connectedCallback();\n    this._observer?.observe().then((effect) => {\n      console.log(\"View effect (initial)\", effect);\n      this._context = effect.context;\n      effect.setEffect(() => {\n        console.log(\"View effect\", effect, this._context);\n        if (this._context) {\n          console.log(\"requesting update\");\n          this.requestUpdate();\n          // this._lastModel = model;\n        } else {\n          throw \"View context not ready for effect\";\n        }\n      });\n    });\n  }\n\n  dispatchMessage(msg: Msg, target: HTMLElement = this) {\n    const ev = new CustomEvent(\"mu:message\", {\n      bubbles: true,\n      composed: true,\n      detail: msg\n    });\n    target.dispatchEvent(ev);\n  }\n\n  ref<T>(key: keyof M) {\n    return this.model ? (this.model[key] as T) : undefined;\n  }\n}\n"],
  "mappings": "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",
  "names": ["shadow", "relay", "event"]
}
